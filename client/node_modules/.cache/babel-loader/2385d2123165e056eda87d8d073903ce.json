{"ast":null,"code":"import { takeLatest, put, call, all } from '@redux-saga/core/effects';\nimport { UserActionTypes } from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\nimport { emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure({\n      error\n    }));\n  }\n}\nexport function* signInWithEmail() {\n  try {} catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/nav333/Documents/andrei-react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,0BAA3C;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,gBAAvD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMb,IAAI,CAACK,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACPO,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACQ,mBAAmB,CAAC;AAAEW,MAAAA;AAAF,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,GAA4B;AACjC,MAAI,CACH,CADD,CACE,OAAOD,KAAP,EAAc;AACdnB,IAAAA,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAH;AACD;AACF;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACrC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUY,kBAAV,GAA+B;AACpC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,mBAAjB,CAAhB;AACD;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMvB,GAAG,CAAC,CAACD,IAAI,CAACoB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from '@redux-saga/core/effects'\nimport { UserActionTypes } from './user.types'\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from '../../firebase/firebase.utils'\n\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions'\nimport { emailSignInSuccess, emailSignInFailure } from './user.actions'\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(googleSignInFailure({ error }))\n  }\n}\n\nexport function* signInWithEmail() {\n  try {\n  } catch (error) {\n    put(emailSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}