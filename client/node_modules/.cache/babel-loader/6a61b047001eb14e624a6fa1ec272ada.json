{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyB3NcaA90ralztPHM6JjOBYAb0ymMO_2Gk',\n  authDomain: 'crown-db-3ec1a.firebaseapp.com',\n  projectId: 'crown-db-3ec1a',\n  storageBucket: 'crown-db-3ec1a.appspot.com',\n  messagingSenderId: '655598580573',\n  appId: '1:655598580573:web:27413e9818db0b26452eb4',\n  measurementId: 'G-97EJ0VMFZ3'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth; //for google sign in: userAuth.displayName value is not null\n\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user ', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionsKey, objectToaAdd) => {\n  const collectionRef = firestore.collection(colletionKey);\n  console.log(collectionRef);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/nav333/Documents/andrei-react/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionsKey","objectToaAdd","collectionRef","collection","colletionKey","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,SAAS,EAAE,gBAHE;AAIbC,EAAAA,aAAa,EAAE,4BAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B,CADoB,CAEpB;;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CApBM;AAsBP,OAAO,MAAMgB,yBAAyB,GAAG,CAACC,cAAD,EAAiBC,YAAjB,KAAkC;AACzE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBC,YAArB,CAAtB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACD,CAHM;AAKP/B,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AAEA,OAAO,MAAMkC,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMtB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMuB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n  apiKey: 'AIzaSyB3NcaA90ralztPHM6JjOBYAb0ymMO_2Gk',\n  authDomain: 'crown-db-3ec1a.firebaseapp.com',\n  projectId: 'crown-db-3ec1a',\n  storageBucket: 'crown-db-3ec1a.appspot.com',\n  messagingSenderId: '655598580573',\n  appId: '1:655598580573:web:27413e9818db0b26452eb4',\n  measurementId: 'G-97EJ0VMFZ3',\n}\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n  const snapshot = await userRef.get()\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth\n    //for google sign in: userAuth.displayName value is not null\n    const createdAt = new Date()\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      })\n    } catch (error) {\n      console.log('error creating user ', error.message)\n    }\n  }\n  return userRef\n}\n\nexport const addCollectionAndDocuments = (collectionsKey, objectToaAdd) => {\n  const collectionRef = firestore.collection(colletionKey)\n  console.log(collectionRef)\n}\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({ prompt: 'select_account' })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}